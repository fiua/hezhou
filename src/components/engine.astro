---
import { getAir8000Models, getProducts8000 } from "../api/index.js";
let models = await getAir8000Models();
let data = await getProducts8000();
let products = data.products;
import FadeIn from "./fadeIn.astro";
---

<style lang="less">
  #Engine {
    width: 100%;
    scroll-margin-top: 60px;
    font-size: 1.4rem;
    .boxShadow();
    padding-bottom: 45px;
    .Engine-bg-title {
      max-width: @maxwidth;
      margin: 0 auto;
      font-weight: 700;

      h2 {
        padding: 50px 0 42px;
        font-size: 32px;
        @media screen and (max-width: 768px) {
          font-size: 2rem;
          padding: 2rem 0 2rem;
        }
      }
    }
    .container-nav {
      width: 100%;
      display: flex;
      justify-content: space-around;
      align-items: center;
      padding: 25px 0;
      font-size: 20px;
      font-weight: 700;
      border-bottom: 0.8px solid #e5e5e5;
      @media screen and (max-width: 768px) {
        padding: 2px 0;
        width: auto;
        overflow-x: auto;
        scroll-behavior: smooth;
        scrollbar-width: none; /* 隐藏滚动条 (Firefox) */
        margin: 0;
      }
      a {
        div {
          padding: 5px 0;
          font-size: 22px;
          position: relative;
          color: @font-color;
          transition: 0.2s;
          white-space: nowrap;
          @media screen and (max-width: 768px) {
            font-size: 1rem;
            margin: 0 2rem;
          }
          &::after {
            content: "";
            position: absolute;
            left: 0;
            right: 0;
            bottom: -59%;
            height: 3px;
            background: @primary-blue;
            border-radius: 5px;
            width: 0%;
            transition: width 0.2s ease-in-out;
            @media screen and (max-width: 768px) {
              bottom: -1px;
              height: 2px;
            }
          }
          &:hover {
            color: @primary-blue;
          }
          &.active {
            color: @primary-blue;
            &::after {
              width: 100%;
            }
          }
        }
      }
    }
    // 公共
    .content-box {
      max-width: @maxwidth;
      margin: 0 auto;
      display: none;
      @media screen and (max-width: 768px) {
        max-width: 100%;
      }
      &.active {
        display: block;
      }
      .content-box-title {
        font-size: 20px;
        font-weight: 600;
        display: flex;
        justify-content: flex-start;
        align-items: flex-end;
        padding-top: 20px;
        -webkit-background-clip: text;
        color: @font-color;
        @media screen and (max-width: 768px) {
          width: @maxwidth;
          font-size: 0.8rem;
          padding-top: 0.6rem;
          margin: 0 auto;
        }
        p:nth-last-child(1) {
          padding-left: 20px;
          font-size: 14px;
          font-weight: 400;
          @media screen and (max-width: 768px) {
            font-size: 0.8rem;
          }
        }
        &:nth-of-type(1) {
          padding-bottom: 25px;
          @media screen and (max-width: 768px) {
            padding-bottom: 1rem;
          }
        }
      }
      // 对比表
      .content-box-contrast {
        display: flex;
        justify-content: space-between;
        box-shadow: 2px 2px 2px rgba(105, 105, 105, 0.1);
        > div {
          &:nth-of-type(1) {
            font-weight: 700;
          }
          width: 100%;
          &:nth-last-of-type(1) {
            ul {
              li {
                border-right: none;
              }
            }
          }
          ul {
            li {
              text-indent: 10%;
              padding: 3px;
              border-right: 1px solid rgba(105, 105, 105, 0.1);
              border-bottom: 1px solid rgba(105, 105, 105, 0.1);
              font-size: 10px;
              @media screen and (max-width: 768px) {
                font-size: 0.6rem;
                white-space: nowrap;
                padding: 0;
                img {
                  height: 90% !important;
                }
              }
              &:nth-of-type(2) {
                height: 100px;
                width: auto;
                white-space: nowrap;
                line-height: 100px;
                @media screen and (max-width: 768px) {
                  line-height: 3rem;
                  height: 3rem;
                }
              }
              &:nth-child(even) {
                background-color: @bg-gradient-start;
              }
              &:nth-child(odd) {
                background-color: @bg-gradient-start;
              }
              &:nth-last-of-type(1) {
                border-bottom: none;
              }
            }
          }
        }
      }
      // 8000系列
      .content-box-content {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 6px;
        line-height: 17px;
        @media screen and (max-width: 768px) {
          line-height: 0.8rem;
          gap: 0.4rem;
          grid-template-columns: repeat(2, 1fr);
        }
        > div {
          background-color: @whiteColor;
          .boxShadow();
          padding: 12px;
          border-radius: 12px;
          transition: 0.3s;
          @media screen and (max-width: 768px) {
            box-shadow: none;
            .border();
            padding: 0.4rem;
          }
          &:hover {
            .boxLinear();
            .bg-title {
              color: @primary-blue;
            }
          }
          p,
          span {
            @media screen and (max-width: 768px) {
              font-size: 0.6rem !important;
            }
          }
          &:hover {
            box-shadow: rgba(44, 37, 111, 0.4) 1px 1px 6px 0px;
          }
          &:nth-of-type(1) {
            grid-row: span 2;
          }
        }

        .content {
          cursor: pointer;

          .interface-info > div {
            display: flex;
            justify-content: space-between;
            margin-right: 20px;
            @media screen and (max-width: 768px) {
              margin-right: 0;
            }
            p {
              display: inline-block;
            }
            span {
              display: inline-block;
            }
          }
          .bg-title {
            font-size: 16px;
            font-weight: 700;
            color: @font-color;
            margin-top: 6px;
            @media screen and (max-width: 768px) {
              font-size: 0.8rem;
              margin-top: 2px;
            }
          }
        }
        .content:has(img) {
          // width: 200%;
          grid-column: span 2;
        }

        .content:nth-last-child(1) {
          .combined-spec {
            display: flex;
            img {
              width: 50%;
            }
          }
        }
      }
    }
  }
</style>
<section id="Engine">
  <FadeIn>
    <div class="Engine-bg-title">
      <h2>合宙Air8000系列工业引擎</h2>
    </div>
    <div class="container-nav">
      <a>
        <div class="content-box-title active">Air8000系列对比</div>
      </a>
      {
        products.map((product: any) => {
          return (
            <a>
              <div>{product.name}</div>
            </a>
          );
        })
      }
    </div>

    <!-- 对比表 -->
    <div class="content-box active">
      <div class="content-box-title">合宙Air8000系列工业引擎对比表</div>
      <div class="content-box-contrast">
        {
          models.models.map((model: any) => (
            <div>
              <ul>
                {model.map((item: any) => {
                  // 定义需要特殊处理的图片列表
                  const specialImages = [
                    "Air8000W.png",
                    "Air8000.png",
                    "Air8000T.png",
                    "Air8000G.png",
                  ];

                  return (
                    <li>
                      {typeof item === "string" &&
                      specialImages.includes(item) ? (
                        // 如果是特殊图片则渲染img标签
                        <img
                          src={`/images/${item}`}
                          alt={item.replace(".png", "")}
                          style="width: auto; height: 94px;"
                        />
                      ) : (
                        // 否则正常渲染文本
                        item
                      )}
                    </li>
                  );
                })}
              </ul>
            </div>
          ))
        }
      </div>
    </div>
  </FadeIn>
  <!-- 8000系列工业引擎 -->
  {
    products.map((product: any) => {
      // 先检查 product.title 是否存在，避免解构错误
      const title1 = product.title?.title1 || "";
      const title2 = product.title?.title2 || "";
      return (
        <div class="content-box">
          <div class="Engine-title">
            <div class="content-box-title">
              <p>{title1}</p>
              <p>{title2}</p>
            </div>
          </div>
          <div class="content-box-content grid">
            {product.data?.map((item: any) => (
              <div class="content grid-item">
                {/* 如果 item 中存在硬件规格或软件规格，渲染组合块 */}
                {(item["硬件规格"] || item["软件规格"]) && (
                  <div class="combined-spec">
                    <div class="spec-group">
                      {item["硬件规格"] && (
                        <div>
                          <p class="bg-title">硬件规格</p>
                          {Array.isArray(item["硬件规格"])
                            ? item["硬件规格"].map((i, idx) => <p>{i}</p>)
                            : null}
                        </div>
                      )}
                      {item["软件规格"] && (
                        <div>
                          <p class="bg-title">软件规格</p>
                          {Array.isArray(item["软件规格"])
                            ? item["软件规格"].map((i, idx) => <p>{i}</p>)
                            : null}
                        </div>
                      )}
                    </div>
                    <div class="spec-image">
                      {product.name === "Air8000" && (
                        <img
                          src={`/${product.name}.png`}
                          alt="Product Image"
                          loading="lazy"
                        />
                      )}
                    </div>
                  </div>
                )}

                {Object.entries(item).map(([key, value]) => {
                  // 如果已经通过 combined-spec 渲染，则跳过硬件规格和软件规格
                  if (key === "硬件规格" || key === "软件规格") {
                    return null;
                  }
                  if (key === "接口数量" && typeof value === "object") {
                    return (
                      <div class="interface-info">
                        <p class="bg-title">{key}</p>
                        {Object.entries(value || {}).map(
                          ([interfaceKey, interfaceValue]) => (
                            <div>
                              <p>{interfaceKey}</p>
                              <p>{interfaceValue}</p>
                            </div>
                          )
                        )}
                      </div>
                    );
                  }
                  return (
                    <div>
                      <p class="bg-title">{key}</p>
                      {Array.isArray(value)
                        ? value.map((i, idx) => <p>{i}</p>)
                        : null}
                    </div>
                  );
                })}
              </div>
            ))}
          </div>
        </div>
      );
    })
  }
</section>
<script>
  import $ from "jquery";

  $(function () {
    let $content = $("#Engine .content-box");
    let $contentnav = $("#Engine .container-nav a");
    let $adiv = $(".container-nav a div");
    $contentnav.on("click", function () {
      $adiv.removeClass("active");
      $adiv.eq($(this).index()).addClass("active");
      $content.removeClass("active");
      $content.eq($(this).index()).addClass("active");
    });
  });
</script>
