---
import { getSelect } from "../api/index.js";
let selectData = await getSelect();
---

<style lang="less">
  #select {
    width: 100%;
    padding-top: 10px;
    scroll-margin-top: 50px;
    @media screen and (max-width: 768px) {
      padding-top: 2rem;
    }
    .boxShadow();
    padding-bottom: 45px;
    font-size: 1.4rem;
    .select-nav-container {
      width: 100%;
      border-bottom: 0.8px solid #e5e5e5;
      @media screen and (max-width: 768px) {
        height: auto;
      }

      .select-nav {
        display: flex;
        justify-content: flex-start;
        align-items: center;
        width: 91%;
        margin: 0 auto;
        font-size: 28px;
        font-weight: 700;
        @media screen and (max-width: 768px) {
          width: 100%;
          margin: 0 auto;
        }
        div {
          padding: 30px 60px 30px 0;
          cursor: pointer;
          @media screen and (max-width: 768px) {
            font-size: 1rem;
            margin: 0 2rem;
            padding: 0;
          }
          &.active {
            color: @primary-blue;
            span {
              &::after {
                width: 100%;
              }
            }
          }
          span {
            border-radius: 20px;
            transition: all 0.3s;
            position: relative;
            display: inline-block;
            @media screen and (max-width: 768px) {
              padding: 5px 0;
            }
            &::after {
              content: "";
              position: absolute;
              left: 0;
              right: 0;
              bottom: -68%;
              height: 3px;
              background: #1690ff;
              border-radius: 5px;
              width: 0%;
              transition: width 0.2s ease-in-out;
              @media screen and (max-width: 768px) {
                bottom: -1px;
                height: 2px;
              }
            }
          }
        }
      }
    }

    .select-container {
      width: 91%;
      margin: 0 auto;
      @media screen and (max-width: 768px) {
        width: 100%;
      }

      .select-content {
        margin-top: 20px;
        @media screen and (max-width: 768px) {
          margin-top: 1rem;
        }
        > div {
          display: none;
          &.active {
            display: block;
          }
        }
        .selectionList {
          .allcontent {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
            gap: 10px;
            .selected-box {
              @media screen and (max-width: 768px) {
                width: 100%;
                margin-top: 4px;
                font-size: 1rem;
              }
              form {
                padding: 0 40px 0 0;
                display: flex;
                align-items: center;
                @media screen and (max-width: 768px) {
                  padding: 0;
                }
                .select-title {
                  white-space: nowrap;
                  margin-right: 3px;
                  font-weight: 600;
                }
                & > div {
                  display: flex;
                  flex: 1;
                }
                label {
                  display: flex;
                  height: auto;
                  padding: 0 6px;
                  cursor: pointer;
                  width: 50%;
                  @media screen and (max-width: 768px) {
                    width: 33%;
                  }
                  input {
                    cursor: pointer;
                    margin-right: 2px;
                    @media screen and (max-width: 768px) {
                      transform: scale(0.6);
                      transform-origin: center;
                    }
                  }
                  span {
                    white-space: nowrap;
                    &:hover {
                      color: @primary-blue;
                    }
                  }
                }
              }
            }
          }
        }
        .selectionAI {
          p {
            text-align: center;
            padding: 20px 0;
            font-size: 14px;
            @media screen and (max-width: 768px) {
              font-size: 1rem;
            }
          }
          .search-input {
            width: 90%;
            height: 75px;
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 0 auto;
            position: relative;
            @media screen and (max-width: 768px) {
              width: 97%;
            }
            .search-input {
              border-color: #595959;
              background-color: #fff;
              border: 1px solid #b8b8b8;
              border-radius: 30px;
              color: #191919;
              font-size: 16px;
              height: 56px;
              line-height: 24px;
              outline: none;
              padding: 8px 44px;
              position: absolute;
              z-index: 1001;
              box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.078);
              @media screen and (max-width: 768px) {
                font-size: 1rem;
                height: 34px;
                padding: 8px 40px;
              }
            }
            .close-iocn {
              background-image: url(../assets/cancel-icon.svg);
              background-position: 50% 50%;
              background-repeat: no-repeat;
              background-size: 100%;
              cursor: pointer;
              height: 12px;
              margin-top: -6px;
              position: absolute;
              right: 86px;
              top: 50%;
              width: 12px;
              z-index: 1001;
              transition: all 0.3s;
              @media screen and (max-width: 768px) {
                right: 25px;
              }
              &:hover {
                background-image: url(../assets/cancel-icon-h.png);
              }
            }
            .submit-icon {
              background-color: transparent;
              border: none;
              color: #575d6c;
              cursor: pointer;
              height: 18px;
              left: 80px;
              line-height: 0;
              margin-top: -9px;
              outline: none;
              padding: 0;
              position: absolute;
              top: 50%;
              width: 18px;
              z-index: 1001;
              @media screen and (max-width: 768px) {
                left: 22px;
              }
              i {
                background: url(../assets/icon_search.svg);
                background-position: 50%;
                background-size: 133% 133%;
                display: inline-block;
                height: 18px;
                width: 18px;
                transition: all 0.2s;
                &:hover {
                  filter: brightness(0) saturate(100%);
                }
              }
            }
          }
        }
      }
    }
  }
</style>
<section id="select">
  <div class="select-nav-container">
    <div class="select-nav">
      <div class="active"><span>选型帮助</span></div>
      <div><span>AI选型</span></div>
    </div>
  </div>
  <div class="select-container">
    <div class="select-content">
      <div class="active selectionList">
        <div class="allcontent">
          {
            Object.entries(selectData).map(([key, value]) => (
              <div class="selected-box">
                <form class="select-form">
                  <span class="select-title">{key}:</span>
                  <div>
                    {(value as [string | number]).map(
                      (item: string | number, index: number) => (
                        <label>
                          <input
                            type="radio"
                            name={key}
                            value={item}
                            checked={index === 0}
                          />
                          <span class="selected">{item}</span>
                        </label>
                      )
                    )}
                  </div>
                </form>
              </div>
            ))
          }
        </div>
      </div>
      <div class="selectionAI">
        <p>
          输入您的简要消息，通过AI帮助您选型，进一步查阅产品资料，开发指南等信息
        </p>
        <div class="search-input">
          <input
            class="search-input inputSub"
            maxlength="128"
            type="text"
            autocomplete="off"
            placeholder="搜索产品文档、开发指南等"
          />
          <div class="close-iocn"></div>
          <div class="submit-icon">
            <i></i>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<script>
  import $ from "jquery";

  $(function ($) {
    // 缓存选择器
    const $selectNavDivs = $(".select-nav div");
    const $selectContentDivs = $(".select-content > div");
    const $inputSub = $(".inputSub");
    const $selecttitle = $(".select-title");
    const $selectForm = $(".select-form");
    let realTimeValue = "";

    // tab切换
    $selectNavDivs.on("click", function () {
      $(this).addClass("active").siblings().removeClass("active");
      $selectContentDivs
        .eq($(this).index())
        .addClass("active")
        .siblings()
        .removeClass("active");
    });

    // 选择框
    //计算title的宽度
    let titleWidth = 0;
    $selecttitle.each(function (index: number, item: HTMLElement) {
      const width = item.offsetWidth;
      if (width > titleWidth) {
        titleWidth = width;
      }
    });
    $selecttitle.each(function (index, item) {
      item.style.width = titleWidth + "px";
    });
    //拿到from数据
    interface FormData {
      [key: string]: string | number;
    }
    const formData: FormData = {};
    //复用调用函数
    function getFormData() {
      $selectForm.each(function () {
        const $form = $(this);
        const key = $form.find(".select-title").text().replace(":", "").trim();
        const value = $form.find('input[type="radio"]:checked').val();
        const $checkedInput = $form.find('input[type="radio"]:checked');
        $form.find('input[type="radio"]').siblings().css("color", "");
        if (typeof value === "string" || typeof value === "number") {
          formData[key] = value;
          $checkedInput.siblings().css("color", "#1690ff");
        }
      });
    }
    getFormData();
    console.log("表单数据：", formData);
    //当表单发生变化的时候，获取表单数据
    $('.select-form input[type="radio"]').on("change", function () {
      getFormData();
      console.log("表单数据已更新：", formData);
    });

    // 输入框实时值
    $inputSub.on("input", function () {
      realTimeValue = $(this).val() as string;
    });

    // 关闭输入框
    $(".close-iocn").on("click", function () {
      $inputSub.val("");
      realTimeValue = "";
    });

    // 提交输入框内容
    const handleSubmit = () => {
      if (realTimeValue.trim()) {
        console.log("提交内容：", realTimeValue);
        $inputSub.val("");
        realTimeValue = "";
      }
    };

    // 提交图标点击事件
    $(".submit-icon").on("click", (event) => {
      event.preventDefault();
      handleSubmit();
    });

    // 输入框回车键提交
    $inputSub.on("keypress", (event) => {
      if (event.which === 13 || event.key === "Enter") {
        event.preventDefault();
        handleSubmit();
      }
    });
  });
</script>
